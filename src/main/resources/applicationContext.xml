<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/util
     http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--1. 开启注解-->
    <context:annotation-config />

    <!--2. 引入属性文件，在配置中占位使用 -->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!--3. 配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${jdbc_driverClass}</value>
        </property>
        <property name="url">
            <value>${jdbc_url}</value>

        </property>
        <property name="username">
            <value>${jdbc_user}</value>
        </property>
        <property name="password">
            <value>${jdbc_password}</value>
        </property>
    </bean>

    <!--4. 配置会话工厂sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--设置别名包-->
        <property name="typeAliasesPackage" value="com.jnshu.pojo" />
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--sql映射文件路径-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--5.自动扫描对象关系映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="com.jnshu.mapper"/>
    </bean>

    <!--6. 声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--7. 支持注解驱动的事务管理，指定事务管理器 -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!--8.容器自动扫描IOC组件  -->
    <!--<context:component-scan base-package="com..."></context:component-scan>-->

    <!--9. aspectj支持自动代理实现AOP功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

    <bean id="baseHolderUtil" class="com.jnshu.Utils.BaseHolderUtil" lazy-init="false" />

    <!--jdbcTemplate所需增加的配置-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="StudentDAO" class="com.jnshu.DAO.Impl.StudentDAOImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>

</beans>